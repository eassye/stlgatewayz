@{
    ViewBag.Title = "Register Page";
}

@model GatewayZ.Models.User

<h1>Register Account</h1>

<div class="centerForm">
    @Html.ValidationSummary()
    <form class="form-group" role="form" method="post">
        <div class="form-group">
            @Html.LabelFor(model => model.firstName)
            @Html.EditorFor(model => model.firstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.firstName)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.lastName)
            @Html.EditorFor(model => model.lastName, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email)
            @Html.EditorFor(model => model.email, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.phoneNumber)
            @Html.EditorFor(model => model.phoneNumber, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.displayName)
            @Html.EditorFor(model => model.displayName, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.password)
            @Html.EditorFor(model => model.password, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @{
                List<SelectListItem> question1 = new List<SelectListItem>();
                question1.Add(new SelectListItem
                {
                    Text = "This is Test 1....",
                    Value = "This is Test 1...."
                });
                question1.Add(new SelectListItem
                {
                    Text = "This is Test 2....",
                    Value = "This is Test 2....",
                });
                question1.Add(new SelectListItem
                {
                    Text = "This is Test 3....",
                    Value = "This is Test 4...."
                });
            }


            @Html.LabelFor(model => model.securityQuestionOne)
            @Html.DropDownListFor(model => model.securityQuestionOne, question1, "-- Select a Security Question --")
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.answerOne)
            @Html.EditorFor(model => model.answerOne, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @{
                List<SelectListItem> question2 = new List<SelectListItem>();
                question2.Add(new SelectListItem
                {
                    Text = "This is Test 1....",
                    Value = "This is Test 1...."
                });
                question2.Add(new SelectListItem
                {
                    Text = "This is Test 2....",
                    Value = "This is Test 2....",
                });
                question2.Add(new SelectListItem
                {
                    Text = "This is Test 3....",
                    Value = "This is Test 4...."
                });
            }


            @Html.LabelFor(model => model.securityQuestionTwo)
            @Html.DropDownListFor(model => model.securityQuestionTwo, question2, "-- Select a Security Question --")
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.answerTwo)
            @Html.EditorFor(model => model.answerTwo, new { @class = "form-control" })
        </div>

        <div class="col-sm-offset-2 col-sm-10">
            <input type="submit" value="Submit"class="btn btn-default"/>
        </div>
    </form>
</div>
